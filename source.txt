//*
Test 3 para probar la Fase de Generación de Código

COMPROBACION. Al ejecutar el programa deberá salir:
A
1.5
1.49
1.48

CONSEJO: No limitarse a comprobar el resultado de la ejecución. Se recomienda además abrir el fichero generado usando el depurador GVM y comprobar sus instrucciones.

Para facilitar esta tarea es de gran utilidad que el alumno haya generado directivas '#line' en el fichero de salida.
Para información sobre la función de dicha directiva se debe abrir con GVM el siguiente tutorial: 
Tutorial\3 Uso básico del depurador\4 Fusión Alto Nivel.txt

NOTA: Es posible que el alumno deba adaptar ligeramente la sintaxis del lenguaje si no coincide
con la del lenguaje que le corresponde.
*//

class Test003;
	global
		types
			deftuple Piloto as
				inicial:CHARACTER;  
				crono:[3]DOUBLE;	/* Tiempos en la Q1, Q2 y Q3
			end
		vars
			F1: [3]Piloto;

	create inicio;
	
	feature inicia(i:INTEGER, inicial:CHARACTER, q1:DOUBLE, q2:DOUBLE, q3:DOUBLE) is
		do
			F1[i].inicial := inicial;
			F1[i].crono[0] := q1;
			F1[i].crono[1] := q2;
			F1[i].crono[2] := q3;
	end

	feature imprimeElMejor is
		local
			mejorPiloto:INTEGER;
			menorCrono:DOUBLE;
			ultimaCrono:DOUBLE;
			i:INTEGER;
		do
			menorCrono := 1000.0;
			from
			i := 0;
			until i >= 3 loop
				ultimaCrono := F1[i].crono[2];
				if ultimaCrono < menorCrono then	/* Solo importa la Q3
					menorCrono := ultimaCrono; 
					mejorPiloto := i;
				end
				i := i + 1;
			end

			println F1[mejorPiloto].inicial;
			from
				i := 0;
			until i >= 3 loop
				println F1[mejorPiloto].crono[i];
				i := i + 1;
			end 
	end

	feature inicio is
		do
		inicia(0, 'A', 1.50, 1.49, 1.48);	/* Alonso
		inicia(1, 'H', 1.52, 1.51, 1.50);	/* Hamilton
		inicia(2, 'V', 1.54, 1.52, 1.51);	/* Vettel

		imprimeElMejor();	/* Los ordenadores no se equivocan
	end
end

main
	inicio();
end