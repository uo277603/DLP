
//*
Este ejemplo no hace nada concreto y está puesto a modo de ejemplo de la sitaxis del lenguaje.
Ver especificaciones del lenguaje para tener mas detalles.
*//

class EJEMPLO;
	
	global
		types
			deftuple tuple1 as /*estructura
				a: INTEGER;
				c: CHARACTER;
				d: DOUBLE;
			end
			deftuple tuple2 as /*estructura
				aa: INTEGER;
				tt: tuple1;
			end
		vars
			i : INTEGER; /*esto estaría bien
			/* j : INTEGER := 2; /*esto estaría mal, no se puede inicializar
			j : INTEGER;
			ai : [2] INTEGER; /*array de una dimensión
			bi : [2][2] INTEGER; /*array de dos dimensiones
			t : tuple1; /*estructura

	create
		inicio; 
		otroInicio; /*Se podrían definir tantos constructores como se desee
		
	feature factorial (i : INTEGER) : INTEGER is /* declaración con valor de retorno INTEGER y parámetro INTEGER
		local
			j, k : INTEGER;
		do
			from
				j:= 1;
				k:= 0;
			until i = 0 loop
				j := j * i;
				k := k + 1;
				i := i - 1;
			end
			return j;
	end /* factorial
	
	feature inicio (ii : INTEGER, ij : INTEGER, ik : INTEGER) is
		local
			i : INTEGER;
			ai : [5] INTEGER;
			t2 : tuple2; /*estructura	
		do
			read(t.a);
			if (t.a < 5) and not (t.a = 0) then
				t.a := t.a * 2;
			else if t.a = 0 then
				t.a := 100;
				else
					t.a := t.a + to<INTEGER>(10.0);
					t.a := -t.a;
				end
			end
			
			from
				i:= 0;
			until i = 5 loop
				ai[i] := t.a * i;
				i := i + 1;
			end
	end /* inicio
	
	feature otroInicio is
		/*local
		do
			print 'H', 'o', 'l', 'a', ' ', 'M', 'u', 'n', 'd', 'o', '!';
			println;
	end /*otroInicio
	
end /*EJEMPLO

main
    inicio(2, 3, 4+5); /* como solo puede estar activo un inicio sólo llamaría a éste
	/* EJEMPLO.otroInicio(6); /* inicio alternativo: habría que comentar la linea anterior y descomentar esta
end /*main
