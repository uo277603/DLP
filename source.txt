class T005_Fibonacci;
	global
		types
			deftuple pairTuple as
				integer : INTEGER;
				character : CHARACTER;
			end
			deftuple ageTuple as
				age : INTEGER;
			end
			
			deftuple acmeTuple as
				 employees : [2] ageTuple;
			end
		vars
			pair : pairTuple;
			acme : [2] acmeTuple;

			fibonacci : [8][3] INTEGER;

	/*-------------------------------
	
	create
		inicio;
	
	/*-------------------------------

	feature p is do end

	feature  f (r : DOUBLE, e : INTEGER) : INTEGER is
		local
			real : DOUBLE;
			c : CHARACTER;
			result : INTEGER;
		do
			real := r * 10.0;
			c := '0';
			if (e < 256) then
				c := to<CHARACTER>(e);
				result := to<INTEGER>(c);
			else 
				result := to<INTEGER>(real);
			end
			return result;
	end

	feature initialize is
		local
			i : INTEGER;
		do
			from
				fibonacci[0][0] := 0;
				fibonacci[0][1] := 1;
				fibonacci[0][2] := 1;
				i := 1;
			until (i >= 8) loop
				fibonacci[i][0] := fibonacci[i - 1][1];
				fibonacci[i][1] := fibonacci[i - 1][2];
				fibonacci[i][2] := fibonacci[i][0] + fibonacci[i][1];
				i := i + 1;
			end
	end

	/*-------------------------------

	feature inicio is
		local
			i : INTEGER;
			j : INTEGER;
		do
			p();
			i := 0;
			pair.character := '0';
			pair.integer := to<INTEGER>('0');

			/* Shows 48 (decimal value of '0')
			println f(to<DOUBLE>(i), (to<INTEGER>(pair.character)));
			f(1.3, 2); 

			initialize();
			from
				i := 0;
			until i >= 8 loop
				/* Shows the Fib sequence, from 1 to 8 (34)
				print '(', i + 1,')',' ';
				print fibonacci[i][0];
				print '+';
				print fibonacci[i][1];
				print '=';
				println fibonacci[i][2];
				i := i + 1;
			end

			acme[1].employees[1].age := 56;
			/* Shows 56
			println acme[1].employees[1].age;
			from
				i := 0;
			until i >= 2 loop
				from
					j := 0;
				until j >= 2 loop
					acme[i].employees[j].age := i + j;
					j := j+ 1;
				end
				i := i + 1;
			end

			from
				i := 0;
			until i >= 2 loop
				from
					j := 0;
				until j >= 2 loop
				/* Shows 0 1 1 2
					print acme[i].employees[j].age;
					print ' ';
					j := j+ 1;
				end
				i := i + 1;
			end
	end
end

main
	inicio();
end