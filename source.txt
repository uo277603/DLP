//*
*** Fichero fuente recuperado por SourcePrinterVisitor
*//

class
	Test_02;

global
	types
		deftuple tuple1 as /* Estructura
			a : INTEGER;
			c : CHARACTER;
			d : DOUBLE;
		end
		deftuple tuple2 as /* Estructura
			aa : INTEGER;
			tt : tuple1;
		end
	vars
		i : INTEGER;
		j : INTEGER;
		ai : [2] INTEGER;
		bi : [2] [2] INTEGER;
		t : tuple1;

create
	inicio;
	otroInicio;

feature
	factorial(i : INTEGER) : INTEGER is
	local
		j : INTEGER;
	do
		from
			j :=  -(1) ;
		until i = 0 loop
			j := ( -((j + i))  * i);
			i := (i -  -(1) );
		end
		return j;
	end /* factorial

feature
	inicio(ii : INTEGER, ij : INTEGER, ik : INTEGER) is
	local
		i : INTEGER;
		ai : [5] INTEGER;
		t2 : [4] tuple2;
	do
		read t.a;
		if ((t.a < 5) and  not((t.a = 0)) ) then
			t.a := (t.a * 2);
			else
			if (t.a = 0) then
				t.a := 100;
				else
				t.a := (t.a + to<INTEGER>(10.0));
				t.a :=  -(t.a) ;
			end
			read t2[0].tt.d;
			t2[0].tt.a := (1 + to<INTEGER>(t2[0].tt.d));
		end
		from
			i := 0;
		until i = 5 loop
			ai[i] := (t.a * i);
			i := (i + factorial(4));
		end
	end /* inicio

feature
	otroInicio : INTEGER is
	/*local
	do
		read i;
		read j;
		j := (i * 7);
		if (((i < 1) and (j > 7)) or  not((i < j)) ) then
			i := 1;
			j := 2;
		end
		return (i - j);
	end /* otroInicio
end /* Test_02

main
	inicio (2, 3, (4 + 5));
end /* Main